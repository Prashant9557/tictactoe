{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prash\\\\AppData\\\\Roaming\\\\Tic Tac Toe Game\\\\tictactoe\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Board from \"./Board\";\nimport Status from \"./Status\";\nimport \"./Game.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  gridSize,\n  winStreak\n}) => {\n  _s();\n  const [board, setBoard] = useState(Array(gridSize).fill(null).map(() => Array(gridSize).fill(null)));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [isDraw, setIsDraw] = useState(false);\n  useEffect(() => {\n    document.documentElement.style.setProperty(\"--grid-size\", gridSize);\n  }, [gridSize]);\n  const handleClick = (row, col) => {\n    if (board[row][col] || winner || isDraw) return;\n    const newBoard = board.map((r, rowIndex) => r.map((cell, colIndex) => {\n      if (rowIndex === row && colIndex === col) {\n        return xIsNext ? \"X\" : \"O\";\n      }\n      return cell;\n    }));\n    setBoard(newBoard);\n    setXIsNext(!xIsNext);\n    if (checkWin(newBoard, winStreak)) {\n      setWinner(xIsNext ? \"X\" : \"O\");\n    } else if (checkDraw(newBoard)) {\n      setIsDraw(true);\n    }\n  };\n  const checkWin = (board, winStreak) => {\n    // Check for win logic remains the same\n  };\n  const checkDraw = board => {\n    // Check for draw logic remains the same\n  };\n  const handleReset = () => {\n    setBoard(Array(gridSize).fill(null).map(() => Array(gridSize).fill(null)));\n    setXIsNext(true);\n    setWinner(null);\n    setIsDraw(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Grid Size: \", gridSize, \", Win Streak: \", winStreak]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      board: board,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Status, {\n      winner: winner,\n      isDraw: isDraw,\n      xIsNext: xIsNext,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"2WJ5i2Giyb8GzufhbSjlbiOKmdE=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Board","Status","jsxDEV","_jsxDEV","Game","gridSize","winStreak","_s","board","setBoard","Array","fill","map","xIsNext","setXIsNext","winner","setWinner","isDraw","setIsDraw","document","documentElement","style","setProperty","handleClick","row","col","newBoard","r","rowIndex","cell","colIndex","checkWin","checkDraw","handleReset","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onReset","_c","$RefreshReg$"],"sources":["C:/Users/Prash/AppData/Roaming/Tic Tac Toe Game/tictactoe/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Board from \"./Board\";\r\nimport Status from \"./Status\";\r\nimport \"./Game.css\";\r\n\r\nconst Game = ({ gridSize, winStreak }) => {\r\n  const [board, setBoard] = useState(\r\n    Array(gridSize)\r\n      .fill(null)\r\n      .map(() => Array(gridSize).fill(null))\r\n  );\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n  const [winner, setWinner] = useState(null);\r\n  const [isDraw, setIsDraw] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.documentElement.style.setProperty(\"--grid-size\", gridSize);\r\n  }, [gridSize]);\r\n\r\n  const handleClick = (row, col) => {\r\n    if (board[row][col] || winner || isDraw) return;\r\n\r\n    const newBoard = board.map((r, rowIndex) =>\r\n      r.map((cell, colIndex) => {\r\n        if (rowIndex === row && colIndex === col) {\r\n          return xIsNext ? \"X\" : \"O\";\r\n        }\r\n        return cell;\r\n      })\r\n    );\r\n\r\n    setBoard(newBoard);\r\n    setXIsNext(!xIsNext);\r\n\r\n    if (checkWin(newBoard, winStreak)) {\r\n      setWinner(xIsNext ? \"X\" : \"O\");\r\n    } else if (checkDraw(newBoard)) {\r\n      setIsDraw(true);\r\n    }\r\n  };\r\n\r\n  const checkWin = (board, winStreak) => {\r\n    // Check for win logic remains the same\r\n  };\r\n\r\n  const checkDraw = (board) => {\r\n    // Check for draw logic remains the same\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setBoard(\r\n      Array(gridSize)\r\n        .fill(null)\r\n        .map(() => Array(gridSize).fill(null))\r\n    );\r\n    setXIsNext(true);\r\n    setWinner(null);\r\n    setIsDraw(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        Grid Size: {gridSize}, Win Streak: {winStreak}\r\n      </h2>\r\n      <Board board={board} onClick={handleClick} />\r\n      <Status\r\n        winner={winner}\r\n        isDraw={isDraw}\r\n        xIsNext={xIsNext}\r\n        onReset={handleReset}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}