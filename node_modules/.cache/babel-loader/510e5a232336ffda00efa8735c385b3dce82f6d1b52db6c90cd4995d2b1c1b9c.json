{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prash\\\\AppData\\\\Roaming\\\\Tic Tac Toe Game\\\\tictactoe\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Game.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  gridSize,\n  winStreak\n}) => {\n  _s();\n  const [board, setBoard] = useState(Array(gridSize).fill(null).map(() => Array(gridSize).fill(null)));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [isDraw, setIsDraw] = useState(false);\n  const [gameOver, setGameOver] = useState(false); // Track game over state\n\n  useEffect(() => {\n    document.documentElement.style.setProperty(\"--grid-size\", gridSize);\n  }, [gridSize]);\n  const handleClick = (row, col) => {\n    if (board[row][col] || winner || isDraw) return;\n    const newBoard = board.map((r, rowIndex) => r.map((cell, colIndex) => {\n      if (rowIndex === row && colIndex === col) {\n        return xIsNext ? \"X\" : \"O\";\n      }\n      return cell;\n    }));\n    setBoard(newBoard);\n    setXIsNext(!xIsNext);\n    if (checkWin(newBoard, winStreak)) {\n      setWinner(xIsNext ? \"X\" : \"O\");\n      setGameOver(true); // Set game over when there's a winner\n    } else if (checkDraw(newBoard)) {\n      setIsDraw(true);\n      setGameOver(true); // Set game over when it's a draw\n    }\n  };\n  const checkWin = (board, winStreak) => {\n    // Check for win logic remains the same\n  };\n  const checkDraw = board => {\n    // Check for draw logic remains the same\n  };\n  const handleReset = () => {\n    setBoard(Array(gridSize).fill(null).map(() => Array(gridSize).fill(null)));\n    setXIsNext(true);\n    setWinner(null);\n    setIsDraw(false);\n    setGameOver(false); // Reset game over state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Grid Size: \", gridSize, \", Win Streak: \", winStreak]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((row, rowIndex) => row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cell\",\n        \"data-value\": cell,\n        onClick: () => handleClick(rowIndex, colIndex)\n      }, `${rowIndex}-${colIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Winner: \", winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 18\n    }, this), isDraw && !winner && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Match Draw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }, this), !gameOver && !winner && !isDraw && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Next Player: \", xIsNext ? \"X\" : \"O\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), (gameOver || isDraw || winner) && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Play Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"VUPpqgkbVT7C+78pNB/pUhMNz9c=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Game","gridSize","winStreak","_s","board","setBoard","Array","fill","map","xIsNext","setXIsNext","winner","setWinner","isDraw","setIsDraw","gameOver","setGameOver","document","documentElement","style","setProperty","handleClick","row","col","newBoard","r","rowIndex","cell","colIndex","checkWin","checkDraw","handleReset","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Prash/AppData/Roaming/Tic Tac Toe Game/tictactoe/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Game.css\";\r\n\r\nconst Game = ({ gridSize, winStreak }) => {\r\n  const [board, setBoard] = useState(\r\n    Array(gridSize)\r\n      .fill(null)\r\n      .map(() => Array(gridSize).fill(null))\r\n  );\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n  const [winner, setWinner] = useState(null);\r\n  const [isDraw, setIsDraw] = useState(false);\r\n  const [gameOver, setGameOver] = useState(false); // Track game over state\r\n\r\n  useEffect(() => {\r\n    document.documentElement.style.setProperty(\"--grid-size\", gridSize);\r\n  }, [gridSize]);\r\n\r\n  const handleClick = (row, col) => {\r\n    if (board[row][col] || winner || isDraw) return;\r\n\r\n    const newBoard = board.map((r, rowIndex) =>\r\n      r.map((cell, colIndex) => {\r\n        if (rowIndex === row && colIndex === col) {\r\n          return xIsNext ? \"X\" : \"O\";\r\n        }\r\n        return cell;\r\n      })\r\n    );\r\n\r\n    setBoard(newBoard);\r\n    setXIsNext(!xIsNext);\r\n\r\n    if (checkWin(newBoard, winStreak)) {\r\n      setWinner(xIsNext ? \"X\" : \"O\");\r\n      setGameOver(true); // Set game over when there's a winner\r\n    } else if (checkDraw(newBoard)) {\r\n      setIsDraw(true);\r\n      setGameOver(true); // Set game over when it's a draw\r\n    }\r\n  };\r\n\r\n  const checkWin = (board, winStreak) => {\r\n    // Check for win logic remains the same\r\n  };\r\n\r\n  const checkDraw = (board) => {\r\n    // Check for draw logic remains the same\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setBoard(\r\n      Array(gridSize)\r\n        .fill(null)\r\n        .map(() => Array(gridSize).fill(null))\r\n    );\r\n    setXIsNext(true);\r\n    setWinner(null);\r\n    setIsDraw(false);\r\n    setGameOver(false); // Reset game over state\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        Grid Size: {gridSize}, Win Streak: {winStreak}\r\n      </h2>\r\n      <div className=\"board\">\r\n        {board.map((row, rowIndex) =>\r\n          row.map((cell, colIndex) => (\r\n            <button\r\n              key={`${rowIndex}-${colIndex}`}\r\n              className=\"cell\"\r\n              data-value={cell}\r\n              onClick={() => handleClick(rowIndex, colIndex)}\r\n            ></button>\r\n          ))\r\n        )}\r\n      </div>\r\n      {winner && <h2>Winner: {winner}</h2>}\r\n      {isDraw && !winner && <h2>Match Draw</h2>}\r\n      {!gameOver && !winner && !isDraw && (\r\n        <h2>Next Player: {xIsNext ? \"X\" : \"O\"}</h2>\r\n      )}\r\n      {(gameOver || isDraw || winner) && (\r\n        <button onClick={handleReset}>Play Again</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}