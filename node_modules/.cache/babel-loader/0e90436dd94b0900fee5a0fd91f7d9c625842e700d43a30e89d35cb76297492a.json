{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prash\\\\OneDrive\\\\Desktop\\\\tictactoe react app\\\\tictactoe\\\\src\\\\components\\\\Board.js\";\nimport React from \"react\";\nimport Cell from \"./Cell\";\n\n//onClick: it is called when a cell is clicked . it takes the rowIndex and colIndex of the clicked cell as argument.\n\n// the board prop is mapped over to render each row of the game board.\n// for each row another map function is used to render each cell in a row.\n\n//key: a key is generated using the row index and colindex to ensure that each cell is unique identified.\n//value: the value of the cell x, o , null is passed from the board prop.\n//onclick: this function is passed to handle the click event on the cell, passing the row index and col index to the occlick prop.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = ({\n  board,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: board.map((row, rowIndex) => row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {\n      value: cell,\n      onClick: () => onClick(rowIndex, colIndex)\n    }, `${rowIndex}-${colIndex}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Cell","jsxDEV","_jsxDEV","Board","board","onClick","className","children","map","row","rowIndex","cell","colIndex","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Prash/OneDrive/Desktop/tictactoe react app/tictactoe/src/components/Board.js"],"sourcesContent":["import React from \"react\";\r\nimport Cell from \"./Cell\";\r\n\r\n//onClick: it is called when a cell is clicked . it takes the rowIndex and colIndex of the clicked cell as argument.\r\n\r\n// the board prop is mapped over to render each row of the game board.\r\n// for each row another map function is used to render each cell in a row.\r\n\r\n//key: a key is generated using the row index and colindex to ensure that each cell is unique identified.\r\n//value: the value of the cell x, o , null is passed from the board prop.\r\n//onclick: this function is passed to handle the click event on the cell, passing the row index and col index to the occlick prop.\r\nconst Board = ({ board, onClick }) => {\r\n  return (\r\n    <div className=\"board\">\r\n      {board.map((row, rowIndex) =>\r\n        row.map((cell, colIndex) => (\r\n          <Cell\r\n            key={`${rowIndex}-${colIndex}`}\r\n            value={cell}\r\n            onClick={() => onClick(rowIndex, colIndex)}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;;AAEzB;;AAEA;AACA;;AAEA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAQ,CAAC,KAAK;EACpC,oBACEH,OAAA;IAAKI,SAAS,EAAC,OAAO;IAAAC,QAAA,EACnBH,KAAK,CAACI,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,KACvBD,GAAG,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,QAAQ,kBACrBV,OAAA,CAACF,IAAI;MAEHa,KAAK,EAAEF,IAAK;MACZN,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACK,QAAQ,EAAEE,QAAQ;IAAE,GAFtC,GAAGF,QAAQ,IAAIE,QAAQ,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAG/B,CACF,CACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACC,EAAA,GAdIf,KAAK;AAgBX,eAAeA,KAAK;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}