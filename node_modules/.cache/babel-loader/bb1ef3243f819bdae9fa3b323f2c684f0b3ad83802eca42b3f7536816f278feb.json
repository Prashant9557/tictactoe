{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prash\\\\AppData\\\\Roaming\\\\Tic Tac Toe Game\\\\tictactoe\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Game.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game({\n  gridSize,\n  winStreak\n}) {\n  _s();\n  const [board, setBoard] = useState(Array(gridSize).fill().map(() => Array(gridSize).fill(null)));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const handleClick = (row, col) => {\n    if (board[row][col] || winner) return;\n    const newBoard = board.map((r, i) => r.map((c, j) => i === row && j === col ? xIsNext ? \"X\" : \"O\" : c));\n    setBoard(newBoard);\n    setXIsNext(!xIsNext);\n    if (checkWin(newBoard, row, col, xIsNext ? \"X\" : \"O\")) {\n      setWinner(xIsNext ? \"X\" : \"O\");\n    }\n  };\n  const checkWin = (board, row, col, player) => {\n    const directions = [{\n      dr: 1,\n      dc: 0\n    },\n    // vertical\n    {\n      dr: 0,\n      dc: 1\n    },\n    // horizontal\n    {\n      dr: 1,\n      dc: 1\n    },\n    // diagonal down-right\n    {\n      dr: 1,\n      dc: -1\n    } // diagonal down-left\n    ];\n    for (const {\n      dr,\n      dc\n    } of directions) {\n      let count = 0;\n      for (let i = -winStreak + 1; i < winStreak; i++) {\n        const r = row + i * dr;\n        const c = col + i * dc;\n        if (r >= 0 && r < gridSize && c >= 0 && c < gridSize && board[r][c] === player) {\n          count++;\n          if (count >= winStreak) return true;\n        } else {\n          count = 0;\n        }\n      }\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Grid Size: \", gridSize, \", Win Streak: \", winStreak]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cell\",\n          onClick: () => handleClick(rowIndex, colIndex),\n          children: cell\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Winner: \", winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"R/sm4sAQvdfarJc+pk73DPsJaH0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Game","gridSize","winStreak","_s","board","setBoard","Array","fill","map","xIsNext","setXIsNext","winner","setWinner","handleClick","row","col","newBoard","r","i","c","j","checkWin","player","directions","dr","dc","count","children","fileName","_jsxFileName","lineNumber","columnNumber","className","rowIndex","cell","colIndex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Prash/AppData/Roaming/Tic Tac Toe Game/tictactoe/src/components/Game.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Game.css\";\r\n\r\nfunction Game({ gridSize, winStreak }) {\r\n  const [board, setBoard] = useState(\r\n    Array(gridSize)\r\n      .fill()\r\n      .map(() => Array(gridSize).fill(null))\r\n  );\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n  const [winner, setWinner] = useState(null);\r\n\r\n  const handleClick = (row, col) => {\r\n    if (board[row][col] || winner) return;\r\n\r\n    const newBoard = board.map((r, i) =>\r\n      r.map((c, j) => (i === row && j === col ? (xIsNext ? \"X\" : \"O\") : c))\r\n    );\r\n    setBoard(newBoard);\r\n    setXIsNext(!xIsNext);\r\n\r\n    if (checkWin(newBoard, row, col, xIsNext ? \"X\" : \"O\")) {\r\n      setWinner(xIsNext ? \"X\" : \"O\");\r\n    }\r\n  };\r\n\r\n  const checkWin = (board, row, col, player) => {\r\n    const directions = [\r\n      { dr: 1, dc: 0 }, // vertical\r\n      { dr: 0, dc: 1 }, // horizontal\r\n      { dr: 1, dc: 1 }, // diagonal down-right\r\n      { dr: 1, dc: -1 }, // diagonal down-left\r\n    ];\r\n\r\n    for (const { dr, dc } of directions) {\r\n      let count = 0;\r\n      for (let i = -winStreak + 1; i < winStreak; i++) {\r\n        const r = row + i * dr;\r\n        const c = col + i * dc;\r\n        if (\r\n          r >= 0 &&\r\n          r < gridSize &&\r\n          c >= 0 &&\r\n          c < gridSize &&\r\n          board[r][c] === player\r\n        ) {\r\n          count++;\r\n          if (count >= winStreak) return true;\r\n        } else {\r\n          count = 0;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Grid Size: {gridSize}, Win Streak: {winStreak}\r\n      </h1>\r\n      <div className=\"board\">\r\n        {board.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"board-row\">\r\n            {row.map((cell, colIndex) => (\r\n              <button\r\n                key={colIndex}\r\n                className=\"cell\"\r\n                onClick={() => handleClick(rowIndex, colIndex)}\r\n              >\r\n                {cell}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {winner && <h2>Winner: {winner}</h2>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}